name: Unit-Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.8' ]

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: >-
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5


    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Setup Python
      - name: Setup Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      #      # Start Postgres db
      #      - name: Start PostgreSQL
      #        if: matrix.db == 'postgres'
      #        run: |
      #          sudo systemctl start postgresql.service
      ##          sudo -u postgres createuser -s runner

      # Setup the environment
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip 
          pip install -r requirements.txt
          pip install apprise braintree coverage


      # Run coverage tests
      - name: Run Migrations and Tests
        env:
          DATABASE_NAME: github_actions
          DATABASE_USER: postgres
          DATABASE_PASSWORD: postgres
        run: |
          cd SWE574
          python manage.py migrate
          coverage run --omit=*/tests/* --source=hc manage.py test

#      # Run unit tests
#      - name: Unit testing
#        run: |
#          cd SWE574
#          python3 manage.py test
